---
const { url, frontmatter } = Astro.props;
import "../styles/global.css";
import { Image } from 'astro:assets';

const images = import.meta.glob('/src/assets/blogImages/*', { eager: true });
const getImagePath = (imageName: string) => {
  const imagePath = `/src/assets/blogImages/${imageName}`;
  return (images[imagePath] as any)?.default || null;
};

const imageSrc = getImagePath(frontmatter.image.src);
---

<article class="card group overflow-hidden h-full flex flex-col">
  <a href={url} class="block flex-1 flex flex-col">
    <!-- Image Section -->
    {imageSrc && (
      <div class="relative overflow-hidden aspect-[16/9]">
        <Image 
          src={imageSrc}
          width={800}
          height={450}
          class="object-cover w-full h-full group-hover:scale-105 transition-transform duration-300"
          alt={frontmatter.image.alt}
          format="webp"
          quality="mid"
        />
        <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
      </div>
    )}
    
    <!-- Content Section -->
    <div class="p-6 flex-1 flex flex-col">
      <!-- Meta Information -->
      <div class="flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400 mb-3">
        <div class="flex items-center gap-1">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M8 2v4"/>
            <path d="M16 2v4"/>
            <rect width="18" height="18" x="3" y="4" rx="2"/>
            <path d="M3 10h18"/>
          </svg>
          <time datetime={frontmatter.pubDate.toISOString()}>
            {frontmatter.pubDate.toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'short', 
              day: 'numeric' 
            })}
          </time>
        </div>
        <div class="flex items-center gap-1">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
            <circle cx="12" cy="7" r="4"/>
          </svg>
          <span>{frontmatter.author}</span>
        </div>
      </div>
      
      <!-- Title -->
      <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors line-clamp-2">
        {frontmatter.title}
      </h3>
      
      <!-- Description -->
      <p class="text-gray-600 dark:text-gray-300 mb-4 flex-1 line-clamp-3">
        {frontmatter.description}
      </p>
      
      <!-- Tags -->
      <div class="flex flex-wrap gap-2 mb-4">
        {frontmatter.tags?.slice(0, 3).map((tag: string) => (
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300">
            {tag}
          </span>
        ))}
        {frontmatter.tags?.length > 3 && (
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-400">
            +{frontmatter.tags.length - 3} more
          </span>
        )}
      </div>
      
      <!-- Read More -->
      <div class="flex items-center text-blue-600 dark:text-blue-400 font-medium group-hover:gap-2 transition-all">
        <span>Read More</span>
        <svg class="w-4 h-4 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M5 12h14"/>
          <path d="m12 5 7 7-7 7"/>
        </svg>
      </div>
    </div>
  </a>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>